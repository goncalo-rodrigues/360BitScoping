import dpkt
import socket
import sys, getopt
from scapy.all import *
from tracker_filter import tracker_filter, print_output
from HandShakeTracker import HandhakeFilter
start_time = 0
def DPIComponent(filepath, out_pcap=None):
    global start_time
    start_time = time.time()
    print "%.3fs: starting read" % (time.time() - start_time)
    pcap = rdpcap(filepath)
    print "%.3fs: done reading" % (time.time() - start_time)
    sessions = pcap.sessions()
    print "%.3fs: done dividing into sessions" % (time.time() - start_time)
    # For each packet in the pcap process the contents
    for stream_desc, pkts in sessions.iteritems():
        #print "%.3f: analyzing new stream" % (time.time() - start_time)
        is_torrent = is_torrent_stream(pkts, False)
        if is_torrent and out_pcap is not None:
            #print "%.3f: writing new stream" % (time.time() - start_time)
            for buf in pkts:
                out_pcap.writepkt(buf, buf.time)
    print "%.3fs: done analyzing all streams" % (time.time() - start_time)

def is_torrent_stream(pkts, verbose = True):
    filters = [tracker_filter, HandhakeFilter]
    for buf in pkts:
            ip_pkt = buf.getlayer('IP')

            if ip_pkt is None:
                continue

            pkt = ip_pkt.payload

            ipsrc = ip_pkt.getfieldval('src')
            ipdst = ip_pkt.getfieldval('dst')
            iplen = ip_pkt.getfieldval('len')
            sport, dport = "UNK", "UNK"
            proto_name = pkt.name
            try:
                sport = pkt.getfieldval('sport')
                dport = pkt.getfieldval('dport')
            except AttributeError:
                pass

            for filt in filters:
                is_torrent, output = filt(pkt)
                if is_torrent:
                    if verbose:
                        filter_name = filt.__name__
                        # Print out the info
                        print 'Packet detected by %s' % filter_name
                        print '%s: %s:%s -> %s:%s   (len=%d)' % \
                              (proto_name, ipsrc, sport, ipdst, dport, iplen)
                        print 'Output generated by filter: %s\n' % output
                    return True
    return False
